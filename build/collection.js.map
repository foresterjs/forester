{"version":3,"sources":["../lib/collection.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACrC,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACvC,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;IAI/B,UAAU;AAEd,WAFI,UAAU,OAE8B;QAA/B,UAAU,QAAV,UAAU;QAAE,gBAAgB,QAAhB,gBAAgB;;0BAFrC,UAAU;;AAIZ,QAAI,CAAC,QAAQ,GAAG;AACd,UAAI,EAAE,CAAC;AACP,aAAO,EAAE,EAAE;KACZ,CAAC;;AAEF,QAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AACzC,QAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;;AAEvC,QAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACvD,QAAI,CAAC,SAAS,GAAG,wBAAc,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACvD,QAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;GACpC;;eAhBG,UAAU;;8BA0BJ,IAAI,EAAE,OAAO,EAAE;AACvB,UAAI,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;;;;;YAEe,KAAK,SAAL,KAAK;YAAE,OAAO,SAAP,OAAO;YAAE,OAAO,SAAP,OAAO;YAAE,IAAI,SAAJ,IAAI;YAAE,OAAO,SAAP,OAAO;YAChD,OAAO;YAMP,KAAK;;;;;;AANL,uBAAO,GAAG,MAAU,CAAC,CAAC;;AAE1B,uBAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AAClD,uBAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;;AAE3D,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;;uBAChC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;;;AAAzD,qBAAK;;AACT,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;;iDAEjD,KAAK;;;;;;;;;;;;;;;;;4EAGH,EAAE;YAEP,IAAI;;;;;AADR,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;;uBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;;;AAAhD,oBAAI;;AACR,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;;kDAExC,IAAI;;;;;;;;;;;;;;;;;4EAGA,IAAI;YAKX,UAAU,EAGR,IAAI;;;;;;AANV,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;;uBACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;;;AAA1C,oBAAI;;uBAEmB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;;;AAAhD,0BAAU;;qBAEV,UAAU;;;;;;uBACK,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;;;AAApD,oBAAI;;AACR,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;kDAC5C,IAAI;;;;;;;;;;;;;;;;;4EAIF,EAAE,EAAE,IAAI;YAKf,UAAU,EAGR,IAAI;;;;;;AANV,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;;uBACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;;;AAA1C,oBAAI;;uBAEmB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;;;AAAhD,0BAAU;;qBAEV,UAAU;;;;;;uBACK,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;AAAxD,oBAAI;;AACR,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;kDAC5C,IAAI;;;;;;;;;;;;;;;;;4EAID,EAAE;YAGV,MAAM;;;;;;AADV,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;;uBAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;;;AAArD,sBAAM;;AACV,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;kDAC7C,MAAM;;;;;;;;;;;;;;;;;4EAIF,EAAE;YAET,MAAM;;;;;AADV,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;;uBACzB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;;;AAApD,sBAAM;;AACV,oBAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;kDAC5C,MAAM;;;;;;;;;;;;;;;;;;YAGH,KAAK,yDAAG,EAAE;YAEhB,KAAK;;;;;;uBAAS,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;;;AAArD,qBAAK;kDACF,KAAK;;;;;;;;;;;;;;;;;4EAGG,MAAM,EAAE,KAAK;;;;;;;;;;;;;;;;;;;;;4EAIZ,KAAK;;;;;;;;;;;;;;;;;;;;uBAIpB,KAAK,EAAE,QAAQ,EAAE;AAClB,UAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;KACvC;;;wBA7FU;AACT,aAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;KACnC;;;wBAEY;AACX,aAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;SAxBG,UAAU;;;AAkHhB,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"collection.js","sourcesContent":["'use strict';\n\nvar EventEmitter = require('events');\nvar Sanitizer = require('./sanitizer');\nvar Defender = require('./defender');\n\nimport Validator from './validator';\n\nclass Collection {\n\n  constructor({dataSource, collectionSchema}) {\n\n    this.defaults = {\n      page: 1,\n      perPage: 20\n    };\n\n    this.dataSource = dataSource;\n    this.collectionSchema = collectionSchema;\n    this.eventEmitter = new EventEmitter();\n\n    this.sanitizer = new Sanitizer(this.schema.properties);\n    this.validator = new Validator(this.schema.properties);\n    this.defender = new Defender(this);\n  }\n\n  get name() {\n    return this.collectionSchema.name;\n  }\n\n  get schema() {\n    return this.collectionSchema;\n  }\n\n  addMethod(name, handler) {\n    this[name] = handler.bind(this);\n  }\n\n  async findAll({ where, orderBy, columns, page, perPage}) {\n    var options = arguments[0];\n\n    options.page = options.page || this.defaults.page;\n    options.perPage = options.perPage || this.defaults.perPage;\n\n    this.eventEmitter.emit('findAll:before', options);\n    var items = await this.dataSource.findAll(this.name, options);\n    this.eventEmitter.emit('findAll:after', options, items);\n\n    return items;\n  }\n\n  async pick(id) {\n    this.eventEmitter.emit('pick:before', id);\n    var item = await this.dataSource.pick(this.name, id);\n    this.eventEmitter.emit('pick:after', id, item);\n\n    return item;\n  }\n\n  async create(data) {\n\n    this.eventEmitter.emit('create:before', data);\n    data = await this.sanitizer.sanitize(data);\n\n    var validation = await this.validator.validate(data);\n\n    if (validation) {\n      var item = await this.dataSource.create(this.name, data);\n      this.eventEmitter.emit('create:after', data, item);\n      return item;\n    }\n  }\n\n  async update(id, data) {\n\n    this.eventEmitter.emit('update:before', data);\n    data = await this.sanitizer.sanitize(data);\n\n    var validation = await this.validator.validate(data);\n\n    if (validation) {\n      var item = await this.dataSource.update(this.name, id, data);\n      this.eventEmitter.emit('update:after', data, item);\n      return item;\n    }\n  }\n\n  async destroy(id) {\n\n    this.eventEmitter.emit('destroy:before', id);\n    var result = await this.dataSource.destroy(this.name, id);\n    this.eventEmitter.emit('destroy:after', id, result);\n    return result;\n\n  }\n\n  async exists(id) {\n    this.eventEmitter.emit('exists:before', id);\n    var exists = await this.dataSource.exists(this.name, id);\n    this.eventEmitter.emit('exists:after', id, exists);\n    return exists;\n  }\n\n  async count(where = {}) {\n\n    var count = await this.dataSource.count(this.name, where);\n    return count;\n  }\n\n  async bulkUpdate(change, where) {\n    //TODO\n  }\n\n  async bulkDestroy(where) {\n    //TODO\n  }\n\n  on(event, callback) {\n    this.eventEmitter.on(event, callback);\n  }\n}\n\nmodule.exports = Collection;\n"]}