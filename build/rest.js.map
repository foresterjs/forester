{"version":3,"sources":["../lib/rest.js"],"names":[],"mappings":"AAAA;;;;;;AAEA,IAAM,SAAS,QAAQ,mBAAR,CAAf;AACA,IAAM,UAAU,QAAQ,aAAR,CAAhB;;AAEA,IAAI,kBAAkB,QAAQ,yBAAR,CAAtB;;AAEA,IAAI,uBAAuB;AACzB,aAAW,QAAQ,+BAAR,CADc;AAEzB,WAAS,QAAQ,6BAAR,CAFgB;AAGzB,UAAQ,QAAQ,4BAAR,CAHiB;AAIzB,uBAAqB,QAAQ,4CAAR,CAJI;AAKzB,kBAAgB,QAAQ,qCAAR;AALS,CAA3B;;IAQM,I;AAEJ,gBAAY,GAAZ,EAAiB;AAAA;;AAEf,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,MAAL,GAAc,EAAd;AAED;;;;2BAEK;AACJ,WAAK,mBAAL,CAAyB,KAAK,GAAL,CAAS,WAAlC;AACD;;;2CAE+F;AAAA,UAA7E,cAA6E,QAA7E,cAA6E;AAAA,UAA7D,MAA6D,QAA7D,MAA6D;AAAA,UAArD,KAAqD,QAArD,KAAqD;AAAA,UAA9C,WAA8C,QAA9C,WAA8C;AAAA,UAAjC,WAAiC,QAAjC,WAAiC;AAAA,UAApB,MAAoB,QAApB,MAAoB;AAAA,UAAZ,QAAY,QAAZ,QAAY;;;AAE9F,UAAI,SAAS,UAAU,cAAvB;;AAEA,WAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAAiB,OAAO,EAAC,cAAD,EAAP,EAAiB,aAAK;AACrC,UAAE,MAAF,EAAU,KAAV,EAAiB,QAAQ,WAAR,CAAjB;AACD,OAFgB,CAAjB;;AAIA,WAAK,MAAL,CAAY,cAAZ,IAA8B,KAAK,MAAL,CAAY,cAAZ,KAA+B,EAA7D;;AAEA,WAAK,MAAL,CAAY,cAAZ,EAA4B,IAA5B,CAAiC;AAC/B,gBAAQ,MADuB;AAE/B,aAAK,SAAS,KAFiB;AAG/B,qBAAa,WAHkB;AAI/B,gBAAQ,MAJuB;AAK/B,kBAAU;AALqB,OAAjC;AAOD;;;wCAEmB,W,EAAa;AAC/B,WAAK,IAAI,cAAT,IAA2B,WAA3B,EAAwC;AACtC,YAAI,aAAa,YAAY,cAAZ,CAAjB;;AAEA,aAAK,YAAL,CAAkB,UAAlB;;AAEA,aAAK,iBAAL,CAAuB,UAAvB;AACD;AACF;;;iCAEY,U,EAAY;AACvB,sBAAgB,IAAhB,EAAsB,EAAC,sBAAD,EAAtB;AACD;;;sCAGiB,U,EAAY;AAC5B,UAAI,YAAY,WAAW,MAAX,CAAkB,SAAlC;AACA,WAAK,IAAI,YAAT,IAAyB,SAAzB,EAAoC;;AAElC,YAAI,WAAW,UAAU,YAAV,CAAf;AACA,iBAAS,IAAT,GAAgB,YAAhB;;AAEA,YAAI,aAAa,qBAAqB,SAAS,IAA9B,CAAjB;;AAEA,YAAI,CAAC,UAAL,EAAiB;AACf,gBAAM,IAAI,KAAJ,CAAU,mBAAmB,YAAnB,GAAkC,YAA5C,CAAN;AACD;;AAED,mBAAW,IAAX,EAAiB;AACf,uBAAa,KAAK,GAAL,CAAS,WADP;AAEf,sBAAY,UAFG;AAGf,oBAAU;AAHK,SAAjB;AAMD;AACF;;;;;;AAMH,OAAO,OAAP,GAAiB,IAAjB","file":"rest.js","sourcesContent":["'use strict';\n\nconst router = require('koa-simple-router');\nconst compose = require('koa-compose');\n\nvar crudMiddlewares = require('./rest-middlewares/crud');\n\nvar relationsMiddlewares = {\n  belongsTo: require('./rest-middlewares/belongs-to'),\n  hasMany: require('./rest-middlewares/has-many'),\n  hasOne: require('./rest-middlewares/has-one'),\n  hasAndBelongsToMany: require('./rest-middlewares/has-and-belongs-to-many'),\n  hasManyThrough: require('./rest-middlewares/has-many-through')\n};\n\nclass Rest {\n\n  constructor(app) {\n\n    this.app = app;\n    this.routes = {};\n\n  }\n\n  boot(){\n    this.registerCollections(this.app.collections);\n  }\n\n  registerEndpoint({ collectionName, method, route, middlewares, description, action, relation }) {\n\n    var prefix = '/api/' + collectionName;\n\n    this.app.koa.use(router({prefix}, _ => {\n      _[method](route, compose(middlewares));\n    }));\n\n    this.routes[collectionName] = this.routes[collectionName] || [];\n\n    this.routes[collectionName].push({\n      method: method,\n      url: prefix + route,\n      description: description,\n      action: action,\n      relation: relation\n    });\n  }\n\n  registerCollections(collections) {\n    for (var collectionName in collections) {\n      var collection = collections[collectionName];\n\n      this.registerCrud(collection);\n\n      this.registerRelations(collection);\n    }\n  }\n\n  registerCrud(collection) {\n    crudMiddlewares(this, {collection});\n  }\n\n\n  registerRelations(collection) {\n    var relations = collection.schema.relations;\n    for (var relationName in relations) {\n\n      var relation = relations[relationName];\n      relation.name = relationName;\n\n      var middleware = relationsMiddlewares[relation.type];\n\n      if (!middleware) {\n        throw new Error(\"relation type \" + relationType + \" not valid\");\n      }\n\n      middleware(this, {\n        collections: this.app.collections,\n        collection: collection,\n        relation: relation\n      });\n\n    }\n  }\n\n\n\n}\n\nmodule.exports = Rest;\n"]}