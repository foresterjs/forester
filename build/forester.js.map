{"version":3,"sources":["../lib/forester.js"],"names":[],"mappings":"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","file":"forester.js","sourcesContent":["'use strict';\n\nvar Collection = require('./collection');\nvar Rest = require('./rest');\nvar Defender = require('./defender');\nvar DataSourceMongo = require('./data-sources/mongo');\nvar DataSourceTingoDB = require('./data-sources/tingo');\nvar koa = require('koa');\nconst router = require('koa-simple-router');\nconst convert = require('koa-convert');\nvar serve = require('koa-static');\nvar mount = require('koa-mount');\nvar bodyParser = require('koa-bodyparser');\nconst qs = require('koa-qs');\nconst assert = require(\"assert\");\nconst compose = require(\"koa-compose\");\nconst koaSend = require(\"koa-send\");\n\nclass Forester {\n\n  constructor() {\n    this.collections = {};\n    this.dataSources = {};\n    this.mappings = [];\n    this.dataSourceAdapters = {\n      'mongo' : DataSourceMongo,\n      'mongodb' : DataSourceMongo,\n      'tingo': DataSourceTingoDB,\n      'tingodb': DataSourceTingoDB\n    };\n\n    this.koa = new koa();\n    this.koa.use(bodyParser());\n    qs(this.koa);\n    this.rest = new Rest(this);\n  }\n\n  registerDataSource({name, adapter, options}) {\n    var driver = this.dataSourceAdapters[adapter];\n    if(!driver) throw new Error(adapter + ' is not supported');\n\n    return this.dataSources[name] = new driver(options);\n  }\n\n  registerDataSources(datasources) {\n    datasources.forEach(this.registerDataSource.bind(this));\n  }\n\n  registerCollection(collectionSchema) {\n    return this.collections[collectionSchema.name] = new Collection({\n      collectionSchema,\n      collections: this.collections\n    });\n  }\n\n  registerCollections(collections) {\n    collections.forEach(this.registerCollection.bind(this));\n  }\n\n  registerMapping(mapping) {\n    this.mappings.push(mapping);\n    return mapping;\n  }\n\n  registerMappings(mappings) {\n    mappings.forEach(this.registerMapping.bind(this));\n  }\n\n  registerStaticRoute({route = \"/\", path, failback}) {\n\n    assert(path, \"Path not defined\");\n\n    var failbackMiddleware = convert(function *(next) {\n      if(this.body || this.path.substring(1, 4) === \"api\") {\n        yield next;\n        return;\n      }\n\n      yield koaSend(this, failback, {root: path});\n\n    });\n\n    var serveMiddleware = convert(serve(path));\n\n    if (failback) {\n      this.koa.use(mount(route, compose([serveMiddleware, failbackMiddleware])));\n    } else {\n      this.koa.use(mount(route, serveMiddleware));\n    }\n\n  }\n\n  registerEndpoint(options) {\n    this.rest.registerEndpoint(options);\n  }\n\n  registerCheckMethod(name, middleware){\n\n    Defender.registerCheckMethod(name, middleware);\n\n  }\n\n  registerDataSourceAdapter(name, driver){\n    this.dataSourceAdapters[name] = driver;\n  }\n\n  initCollections() {\n    this.mappings.forEach(({collection, datasource}) => {\n      var collectionObj = this.collections[collection];\n      var dataSourceObj = this.dataSources[datasource];\n\n      if (!collectionObj) throw new Error('Mapping err: Collection ' + collection + ' not defined or registered');\n      if (!dataSourceObj) throw new Error('Mapping err: Datasource ' + datasource + ' not defined or registered');\n\n      collectionObj.dataSource = dataSourceObj;\n    });\n\n    for (var collectionName in this.collections) {\n      var collectionObj = this.collections[collectionName];\n      if (!collectionObj.dataSource) {\n        throw new Error('Collection err: Collection ' + collectionName + ' is not mapped to any datasource');\n      }\n    }\n  }\n\n  async boot() {\n\n    this.initCollections();\n    this.rest.boot();\n\n    console.log(\"Forester is ready!\");\n  }\n\n  use(plugin) {\n    plugin(this);\n  }\n\n  listen({port}) {\n    return new Promise((resolve, reject) => {\n      this.server = this.koa.listen(port, function (err) {\n        if (err) {\n          reject(err);\n          return;\n        }\n        console.log(\"Listening \" + port);\n        resolve();\n      });\n    });\n  }\n\n  close() {\n    return new Promise((resolve, reject) => {\n      this.server.close(function (err) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve();\n      });\n    });\n  }\n}\n\nmodule.exports = Forester;\n"]}