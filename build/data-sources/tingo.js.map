{"version":3,"sources":["../../lib/data-sources/tingo.js"],"names":[],"mappings":"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","file":"tingo.js","sourcesContent":["'use strict';\n\nvar tingodb = require('tingodb')();\n\nclass DataSourceTingoDB {\n\n  constructor(options) {\n    this.db = new tingodb.Db(options.path, options);\n  }\n\n  async updateSchema(collectionName) {\n\n  }\n\n  async findAll(collectionName, { page, perPage, where, orderBy, fields} = {}) {\n\n    return new Promise((resolve, reject) => {\n      var cursor;\n\n      if (where) {\n        cursor = this.db.collection(collectionName).find(DataSourceTingoDB.mongoWhere(where));\n      } else {\n        cursor = this.db.collection(collectionName).find();\n      }\n\n      if (orderBy) {\n        cursor.sort(DataSourceTingoDB.mongoOrderBy(orderBy));\n      }\n\n      if (page && perPage) {\n        var skip = (perPage * (page - 1));\n\n        cursor.limit(perPage);\n        cursor.skip(skip);\n      }\n\n      cursor.toArray(function (err, docs) {\n        if (!err)\n          resolve(DataSourceTingoDB.unwrapId(docs));\n        else\n          reject(false);\n      });\n    });\n\n  }\n\n  async pick(collectionName, ids) {\n\n    if (Array.isArray(ids)) {\n\n      return new Promise((resolve, reject) => {\n\n        ids = ids.map(function (id) {\n          return new tingodb.ObjectID(id)\n        });\n\n        this.db.collection(collectionName).find({_id: {$in: ids}}).toArray(function (err, data) {\n          if (!err) {\n            resolve(DataSourceTingoDB.unwrapId(data));\n          } else {\n            reject(false);\n          }\n        });\n      });\n\n    } else {\n\n      return new Promise((resolve, reject) => {\n\n        var id = ids;\n        this.db.collection(collectionName).findOne({_id: new tingodb.ObjectID(id)}, function (err, data) {\n          if (!err) {\n            resolve((data === null) ? false : DataSourceTingoDB.unwrapId(data));\n          } else {\n            reject(false);\n          }\n        });\n      });\n\n    }\n  }\n\n  async create(collectionName, data) {\n\n    return new Promise((resolve, reject) => {\n      this.db.collection(collectionName).insert(data, function (err, result) {\n        if (!err)\n          resolve(DataSourceTingoDB.unwrapId(result));\n        else\n          reject(false);\n      });\n    });\n\n  }\n\n  async update(collectionName, id, data) {\n\n    return new Promise((resolve, reject) => {\n\n      this.db.collection(collectionName).findAndModify(\n        [{_id: new tingodb.ObjectID(id)}], [['_id', 1]], {$set: data}, {'new': true},\n        function (err, doc) {\n          if (!err) {\n            resolve(DataSourceTingoDB.unwrapId(doc));\n          } else {\n            reject(false);\n          }\n        });\n    })\n\n  }\n\n  async destroy(collectionName, ids) {\n\n    if (Array.isArray(ids)) {\n\n      return new Promise((resolve, reject) => {\n\n        ids = ids.map(function (id) {\n          return tingodb.ObjectID(id)\n        });\n\n        this.db.collection(collectionName).remove({_id: {$in: ids}}, function (err, data) {\n          if (!err) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      });\n\n    } else {\n\n      return new Promise((resolve, reject) => {\n\n        var id = ids;\n        this.db.collection(collectionName).remove({_id: new tingodb.ObjectID(id)}, function (err, data) {\n          if (!err) {\n            resolve(data === 1);\n          } else {\n            reject(false);\n          }\n        });\n      });\n\n    }\n  }\n\n  async exists(collectionName, id) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(collectionName).findOne({'_id': new tingodb.ObjectID(id)}, function (err, data) {\n        if (!err)\n          resolve(data !== null);\n        else\n          reject(false);\n      });\n    });\n  }\n\n  async count(collectionName, where) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(collectionName).count(where, function (err, data) {\n        if (!err)\n          resolve(data)\n        else\n          reject(false);\n      });\n    });\n  }\n\n\n  static mongoOrderBy(orderBy) {\n\n    var orderByMap = {\n      ASC: 1,\n      DESC: -1\n    };\n\n    var result = {};\n\n    for (var field in orderBy) {\n      var value = orderByMap[orderBy[field]];\n      if (!value) throw new Error('orderBy not recognized');\n\n      result[field] = value;\n\n    }\n\n    return result;\n  }\n\n  static mongoWhere(where) {\n    return where;\n  }\n\n  static unwrapId(docs) {\n    if (Array.isArray(docs)) {\n      return docs.map(DataSourceTingoDB.unwrapId);\n    }\n\n    var doc = docs;\n    doc.id = doc._id.toString();\n    delete doc._id;\n    return doc;\n  }\n\n}\n\nmodule.exports = DataSourceTingoDB;\n"]}