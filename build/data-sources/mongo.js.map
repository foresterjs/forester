{"version":3,"sources":["../../lib/data-sources/mongo.js"],"names":[],"mappings":"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","file":"mongo.js","sourcesContent":["'use strict';\n\nvar pmongo = require('promised-mongo');\n\nclass DataSourceMongo {\n\n  constructor({connectionUri}) {\n\n    this.db = pmongo(connectionUri);\n\n  }\n\n  async updateSchema(collectionName) {\n    console.log('here', collectionName);\n    await this.db.createCollection(collectionName);\n  }\n\n  async findAll(collectionName, { page, perPage, where, orderBy, fields} = {}) {\n\n    //TODO implement fields\n\n    var cursor;\n\n    if (typeof where === 'undefined') {\n      cursor = this.db.collection(collectionName).find();\n    } else {\n      cursor = this.db.collection(collectionName).find(DataSourceMongo.mongoWhere(where));\n    }\n\n    if (typeof orderBy !== 'undefined') {\n      cursor.sort(DataSourceMongo.mongoOrderBy(orderBy));\n    }\n\n    if (typeof page !== 'undefined' && typeof perPage !== 'undefined') {\n      var skip = (perPage * (page - 1))\n\n      cursor.limit(perPage);\n      cursor.skip(skip);\n    }\n\n    return DataSourceMongo.unwrapId(await cursor.toArray());\n  }\n\n  async pick(collectionName, ids) {\n\n    if(Array.isArray(ids)){\n\n      ids = ids.map(function(id){\n        return pmongo.ObjectId(id)\n      });\n\n      var items = await this.db.collection(collectionName).find({_id: {$in: ids}});\n      return DataSourceMongo.unwrapId(items);\n\n    }else{\n\n      var id = ids;\n      try {\n        var item = await this.db.collection(collectionName).findOne({_id: new pmongo.ObjectId(id)});\n        item = (item === null) ? false : item;\n      } catch (e) {\n        console.error(e);\n        return false;\n      }\n\n      return DataSourceMongo.unwrapId(item);\n\n    }\n  }\n\n  async create(collectionName, data) {\n    var item = await this.db.collection(collectionName).insert(data);\n    return DataSourceMongo.unwrapId(item);\n  }\n\n  async update(collectionName, id, data) {\n    try {\n      var item = await this.db.collection(collectionName).findAndModify({\n        'query': {'_id': new pmongo.ObjectId(id)},\n        'update': data,\n        'new': true\n      });\n\n      item = (item.lastErrorObject.n === 0) ? false : item.value;\n\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n\n    return DataSourceMongo.unwrapId(item);\n  }\n\n  async destroy(collectionName, ids) {\n\n    if (Array.isArray(ids)) {\n\n      ids = ids.map(function (id) {\n        return pmongo.ObjectId(id)\n      });\n\n      await this.db.collection(collectionName).remove({_id: {$in: ids}});\n      return true;\n\n    } else {\n\n      try {\n\n        var id = ids;\n        var result = await this.db.collection(collectionName).remove({'_id': new pmongo.ObjectId(id)});\n\n        return result.n === 1;\n\n      } catch (e) {\n        console.error(e);\n        return false;\n      }\n\n    }\n  }\n\n\n  async exists(collectionName, id) {\n    try {\n      var item = await this.db.collection(collectionName).findOne({'_id': new pmongo.ObjectId(id)});\n      return (item !== null);\n    }catch (e){\n      console.error(e);\n      return false;\n    }\n  }\n\n  async count(collectionName, where) {\n    var count = await this.db.collection(collectionName).count(where);\n    return count;\n  }\n\n\n  static mongoOrderBy(orderBy) {\n\n    var orderByMap = {\n      ASC: 1,\n      DESC: -1\n    };\n\n    var result = {};\n\n    for (var field in orderBy) {\n      var value = orderByMap[orderBy[field]];\n      if (!value) throw new Error('orderBy not recognized');\n\n      result[field] = value;\n\n    }\n\n    return result;\n  }\n\n  static mongoWhere(where) {\n    return where;\n  }\n\n  static unwrapId(docs) {\n    if (Array.isArray(docs)) {\n      return docs.map(DataSourceMongo.unwrapId);\n    }\n\n    var doc = docs;\n    doc.id = doc._id.toString();\n    delete doc._id;\n    return doc;\n  }\n\n}\n\nmodule.exports = DataSourceMongo;\n"]}