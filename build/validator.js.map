{"version":3,"sources":["../lib/validator.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;AAGb,IAAM,cAAc,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;IAE/B,SAAS;AAE5B,WAFmB,SAAS,CAEhB,MAAM,EAAE;0BAFD,SAAS;;AAG1B,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;GACtB;;eAJkB,SAAS;;;2EAMb,IAAI;YAEb,gBAAgB,EAIhB,MAAM;;;;;AAJN,gCAAgB,GAAG,kBAAQ,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;;qBAEtD,gBAAgB,CAAC,KAAK;;;;;iDAAS,IAAI;;;AAEnC,sBAAM,GAAG,EAAE;;AACf,gCAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AACvC,wBAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAClD,wBAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;iBACxC,CAAC,CAAC;;sBAEG,IAAI,cAAc,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;SAlBf,SAAS;;;kBAAT,SAAS","file":"validator.js","sourcesContent":["'use strict';\n\nimport mschema from 'mschema';\nconst ValidationFail = require('./validation-fail');\n\nexport default class Validator {\n\n  constructor(schema) {\n    this.schema = schema;\n  }\n\n  async validate(data) {\n\n    let validationResult = mschema.validate(data, this.schema);\n\n    if (validationResult.valid) return true;\n\n    let errors = {};\n    validationResult.errors.forEach((err) => {\n      errors[err.property] = errors[err.property] || [];\n      errors[err.property].push(err.message);\n    });\n\n    throw new ValidationFail(errors);\n  }\n\n}\n"]}