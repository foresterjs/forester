{"version":3,"sources":["../../lib/rest-middlewares/belongs-to.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;QAyBG,GAAG,GAAH,GAAG;;;;AAvBnB,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,QAAuC;MAApC,WAAW,QAAX,WAAW;MAAE,UAAU,QAAV,UAAU;MAAE,QAAQ,QAAR,QAAQ;;AAEjE,MAAI,iBAAiB,GAAG,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACzD,MAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;;AAErC,MAAI,CAAC,gBAAgB,CACnB;AACE,UAAM,EAAE,MAAM;AACd,YAAQ,EAAE,QAAQ,CAAC,IAAI;AACvB,kBAAc,EAAE,UAAU,CAAC,IAAI;AAC/B,UAAM,EAAE,KAAK;AACb,SAAK,EAAE,OAAO,GAAG,QAAQ,CAAC,IAAI;AAC9B,eAAW,EAAE,CACX,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,EAC9C,GAAG,CAAC,EAAC,UAAU,EAAV,UAAU,EAAE,iBAAiB,EAAjB,iBAAiB,EAAE,UAAU,EAAV,UAAU,EAAC,CAAC,CACjD;AACD,eAAW,EAAE,OAAO,GAAG,QAAQ,CAAC,IAAI;GACrC,CACF,CAAC;CAEH,CAAA;;AAGM,SAAS,GAAG,QAA8C;MAA5C,UAAU,SAAV,UAAU;MAAE,iBAAiB,SAAjB,iBAAiB;MAAE,UAAU,SAAV,UAAU;;AAC5D;wDAAO,wBAA6C,IAAI;UAAhC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,MAAM,SAAN,MAAM;UAE3C,EAAE,EAIF,IAAI,EASJ,SAAS,EAST,WAAW;;;;;AAtBX,gBAAE,GAAG,MAAM,CAAC,EAAE;;AAClB,sBAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE;;;AAAC;qBAGnB,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;;;AAAhC,kBAAI;;kBACJ,IAAI;;;;;AACN,sBAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC3B,sBAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,CAAC;;qBAC/B,IAAI,EAAE;;;;;;;;AAKV,uBAAS,GAAG,IAAI,CAAC,UAAU,CAAC;;kBAC5B,SAAS;;;;;AACX,sBAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC3B,sBAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,CAAC;;qBAC/B,IAAI,EAAE;;;;;;;qBAKU,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC;;;AAArD,yBAAW;;AACf,kBAAG,WAAW,EAAC;AACb,wBAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC1B,wBAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;eAClC,MAAI;AACH,wBAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC3B,wBAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,CAAC;eACtC;;;;;;;;KACF;;;;;OAAA;CACF","file":"belongs-to.js","sourcesContent":["\"use strict\";\n\nmodule.exports = function (rest, {collections, collection, relation}) {\n\n  var foreignCollection = collections[relation.collection];\n  var foreignKey = relation.foreignKey;\n\n  rest.registerEndpoint(\n    {\n      action: \"pick\",\n      relation: relation.name,\n      collectionName: collection.name,\n      method: \"get\",\n      route: \"/:id/\" + relation.name,\n      middlewares: [\n        collection.defender.acl(\"pick\", relation.name),\n        get({collection, foreignCollection, foreignKey})\n      ],\n      description: \"pick \" + relation.name\n    }\n  );\n\n}\n\n\nexport function get({collection, foreignCollection, foreignKey}) {\n  return async function ({request, response, params}, next) {\n\n    var id = params.id;\n    response.body = response.body || {};\n\n    //pick obj\n    var item = await collection.pick(id);\n    if(!item){\n      response.body.done = false;\n      response.body.errors = ['not_found'];\n      await next();\n      return;\n    }\n\n    //check\n    var foreignId = item[foreignKey];\n    if(!foreignId){\n      response.body.done = false;\n      response.body.errors = ['not_found'];\n      await next();\n      return;\n    }\n\n    //pick foreign obj\n    var foreignItem = await foreignCollection.pick(foreignId);\n    if(foreignItem){\n      response.body.done = true;\n      response.body.data = foreignItem;\n    }else{\n      response.body.done = false;\n      response.body.errors = ['not_found'];\n    }\n  }\n}\n"]}