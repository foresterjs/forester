{"version":3,"sources":["../../lib/rest-middlewares/has-one.js"],"names":[],"mappings":"AAAA;;;;;QAyBgB,I,GAAA,I;;;;AAvBhB,OAAO,OAAP,GAAiB,UAAU,IAAV,QAAqD;AAAA,MAApC,WAAoC,QAApC,WAAoC;AAAA,MAAvB,UAAuB,QAAvB,UAAuB;AAAA,MAAX,QAAW,QAAX,QAAW;;;AAEpE,MAAI,oBAAoB,YAAY,SAAS,UAArB,CAAxB;AACA,MAAI,aAAa,SAAS,UAA1B;;AAEA,OAAK,gBAAL,CACE;AACE,YAAQ,MADV;AAEE,cAAU,SAAS,IAFrB;AAGE,oBAAgB,WAAW,IAH7B;AAIE,YAAQ,KAJV;AAKE,WAAO,UAAU,SAAS,IAL5B;AAME,iBAAa,CACX,WAAW,QAAX,CAAoB,GAApB,CAAwB,MAAxB,EAAgC,SAAS,IAAzC,CADW,EAEX,KAAK,EAAC,sBAAD,EAAa,oCAAb,EAAgC,sBAAhC,EAAL,CAFW,CANf;AAUE,iBAAa,UAAU,WAAW;AAVpC,GADF;AAeD,CApBD;;AAuBO,SAAS,IAAT,QAA2D;AAAA,MAA5C,UAA4C,SAA5C,UAA4C;AAAA,MAAhC,iBAAgC,SAAhC,iBAAgC;AAAA,MAAb,UAAa,SAAb,UAAa;;AAChE;AAAA,0DAAO,wBAA6C,IAA7C;AAAA,UAAiB,OAAjB,SAAiB,OAAjB;AAAA,UAA0B,QAA1B,SAA0B,QAA1B;AAAA,UAAoC,MAApC,SAAoC,MAApC;AAAA,UAED,EAFC,EAGD,OAHC,EASD,KATC;AAAA;AAAA;AAAA;AAAA;AAED,gBAFC,GAEI,OAAO,EAFX;AAGD,qBAHC,GAGS,QAAQ,KAHjB;;AAIL,uBAAS,IAAT,GAAgB,SAAS,IAAT,IAAiB,EAAjC;;AAEA,sBAAQ,KAAR,GAAgB,QAAQ,KAAR,IAAiB,EAAjC;AACA,sBAAQ,KAAR,CAAc,UAAd,IAA4B,EAA5B;;AAPK;AAAA,qBASa,kBAAkB,OAAlB,CAA0B,OAA1B,CATb;;AAAA;AASD,mBATC;;AAAA,oBAWF,MAAM,MAAN,KAAiB,CAXf;AAAA;AAAA;AAAA;;AAYH,uBAAS,IAAT,CAAc,IAAd,GAAqB,KAArB;AACA,uBAAS,IAAT,CAAc,MAAd,GAAuB,CAAC,WAAD,CAAvB;AAbG;AAAA,qBAcG,MAdH;;AAAA;AAAA;;AAAA;AAAA,oBAkBF,MAAM,MAAN,GAAe,CAlBb;AAAA;AAAA;AAAA;;AAmBH,uBAAS,IAAT,CAAc,IAAd,GAAqB,KAArB;AACA,uBAAS,IAAT,CAAc,MAAd,GAAuB,CAAC,UAAD,CAAvB;AApBG;AAAA,qBAqBG,MArBH;;AAAA;AAAA;;AAAA;;AAyBL,uBAAS,IAAT,CAAc,IAAd,GAAqB,KAArB;AACA,uBAAS,IAAT,CAAc,IAAd,GAAqB,IAArB;;AA1BK;AAAA,qBA4BC,MA5BD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AA8BD","file":"has-one.js","sourcesContent":["\"use strict\";\n\nmodule.exports = function (rest, {collections, collection, relation}) {\n\n  var foreignCollection = collections[relation.collection];\n  var foreignKey = relation.foreignKey;\n\n  rest.registerEndpoint(\n    {\n      action: \"pick\",\n      relation: relation.name,\n      collectionName: collection.name,\n      method: \"get\",\n      route: '/:id/' + relation.name,\n      middlewares: [\n        collection.defender.acl(\"pick\", relation.name),\n        pick({collection, foreignCollection, foreignKey})\n      ],\n      description: \"find \" + collection.name\n    }\n  );\n\n}\n\n\nexport function pick({collection, foreignCollection, foreignKey}) {\n  return async function ({request, response, params}, next) {\n\n    var id = params.id;\n    var options = request.query;\n    response.body = response.body || {};\n\n    options.where = options.where || {};\n    options.where[foreignKey] = id;\n\n    var items = await foreignCollection.findAll(options);\n\n    if(items.length === 0){\n      response.body.done = false;\n      response.body.errors = ['not_found'];\n      await next();\n      return;\n    }\n\n    if(items.length > 1){\n      response.body.done = false;\n      response.body.errors = ['too_many'];\n      await next();\n      return;\n    }\n\n    response.body.data = items;\n    response.body.done = true;\n\n    await next();\n  }\n}\n"]}