{"version":3,"sources":["../../lib/rest-middlewares/has-one.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;QAyBG,IAAI,GAAJ,IAAI;;;;AAvBpB,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,QAAuC;MAApC,WAAW,QAAX,WAAW;MAAE,UAAU,QAAV,UAAU;MAAE,QAAQ,QAAR,QAAQ;;AAEjE,MAAI,iBAAiB,GAAG,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACzD,MAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;;AAErC,MAAI,CAAC,gBAAgB,CACnB;AACE,UAAM,EAAE,MAAM;AACd,YAAQ,EAAE,QAAQ,CAAC,IAAI;AACvB,kBAAc,EAAE,UAAU,CAAC,IAAI;AAC/B,UAAM,EAAE,KAAK;AACb,SAAK,EAAE,OAAO,GAAG,QAAQ,CAAC,IAAI;AAC9B,eAAW,EAAE,CACX,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,EAC9C,IAAI,CAAC,EAAC,UAAU,EAAE,iBAAiB,EAAE,UAAU,EAAC,CAAC,CAClD;AACD,eAAW,EAAE,OAAO,GAAG,UAAU,CAAC,IAAI;GACvC,CACF,CAAC;CAEH,CAAA;;AAGM,SAAS,IAAI,QAA8C;MAA5C,UAAU,SAAV,UAAU;MAAE,iBAAiB,SAAjB,iBAAiB;MAAE,UAAU,SAAV,UAAU;;AAC7D;gCAAO,kBAA6C,IAAI,EAAE;UAAlC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,MAAM,SAAN,MAAM;;AAE/C,UAAI,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;AACnB,UAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;AAC5B,cAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;AAEpC,aAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;AACpC,aAAO,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;;AAE/B,UAAI,KAAK,GAAG,MAAM,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;;AAErD,UAAG,KAAK,CAAC,MAAM,KAAK,CAAC,EAAC;AACpB,gBAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC3B,gBAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,CAAC;AACrC,cAAM,IAAI,EAAE,CAAC;AACb,eAAO;OACR;;AAED,UAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;AAClB,gBAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC3B,gBAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,UAAU,CAAC,CAAC;AACpC,cAAM,IAAI,EAAE,CAAC;AACb,eAAO;OACR;;AAED,cAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC3B,cAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAE1B,YAAM,IAAI,EAAE,CAAC;KACd;;;;;OAAA;CACF","file":"has-one.js","sourcesContent":["\"use strict\";\n\nmodule.exports = function (rest, {collections, collection, relation}) {\n\n  var foreignCollection = collections[relation.collection];\n  var foreignKey = relation.foreignKey;\n\n  rest.registerEndpoint(\n    {\n      action: \"pick\",\n      relation: relation.name,\n      collectionName: collection.name,\n      method: \"get\",\n      route: '/:id/' + relation.name,\n      middlewares: [\n        collection.defender.acl(\"pick\", relation.name),\n        pick({collection, foreignCollection, foreignKey})\n      ],\n      description: \"find \" + collection.name\n    }\n  );\n\n}\n\n\nexport function pick({collection, foreignCollection, foreignKey}) {\n  return async function ({request, response, params}, next) {\n\n    var id = params.id;\n    var options = request.query;\n    response.body = response.body || {};\n\n    options.where = options.where || {};\n    options.where[foreignKey] = id;\n\n    var items = await foreignCollection.findAll(options);\n\n    if(items.length === 0){\n      response.body.done = false;\n      response.body.errors = ['not_found'];\n      await next();\n      return;\n    }\n\n    if(items.length > 1){\n      response.body.done = false;\n      response.body.errors = ['too_many'];\n      await next();\n      return;\n    }\n\n    response.body.data = items;\n    response.body.done = true;\n\n    await next();\n  }\n}\n"]}