{"version":3,"sources":["../../lib/rest-middlewares/common.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;QAEG,UAAU,GAAV,UAAU;QAkBV,SAAS,GAAT,SAAS;QAWT,cAAc,GAAd,cAAc;QAcd,QAAQ,GAAR,QAAQ;;;;AA3CjB,SAAS,UAAU,OAAe;MAAb,UAAU,QAAV,UAAU;;AACpC;wDAAO,wBAA6C,IAAI;UAAhC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,MAAM,SAAN,MAAM;UAI3C,MAAM;;;;;;AAFV,sBAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;AAEhC,oBAAM,GAAG,UAAU,CAAC,MAAM;;AAE9B,sBAAQ,CAAC,IAAI,CAAC,MAAM,GAAG;AACrB,oBAAI,EAAE,MAAM,CAAC,IAAI;AACjB,2BAAW,EAAE,MAAM,CAAC,WAAW;AAC/B,0BAAU,EAAE,MAAM,CAAC,UAAU;AAC7B,yBAAS,EAAE,MAAM,CAAC,SAAS;eAC5B,CAAC;;;qBAEI,IAAI,EAAE;;;;;;;;KACb;;;;;OAAA;CACF;;AAEM,SAAS,SAAS,QAAe;MAAb,UAAU,SAAV,UAAU;;AACnC;wDAAO,yBAA6C,IAAI;UAAhC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,MAAM,SAAN,MAAM;;;;;;AAE/C,sBAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;;qBAER,UAAU,CAAC,KAAK,EAAE;;;AAA9C,sBAAQ,CAAC,IAAI,CAAC,KAAK;;qBAEb,IAAI,EAAE;;;;;;;;KACb;;;;;OAAA;CACF;;AAEM,SAAS,cAAc,QAAe;MAAb,UAAU,SAAV,UAAU;;AACxC;wDAAO,yBAA6C,IAAI;UAAhC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,MAAM,SAAN,MAAM;UAI3C,KAAK,EACL,OAAO;;;;;;AAHX,sBAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;6BAExB,QAAQ,CAAC,IAAI,CAAC,KAAK;;;;;;;;qBAAW,UAAU,CAAC,KAAK,EAAE;;;;;;AAAxD,mBAAK;AACL,qBAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO;;AAElE,sBAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;;;qBAE3C,IAAI,EAAE;;;;;;;;KACb;;;;;OAAA;CACF;;AAEM,SAAS,QAAQ,QAAe;MAAb,UAAU,SAAV,UAAU;;AAClC;wDAAO,yBAA2C,IAAI;UAA9B,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,IAAI,SAAJ,IAAI;;;;;;AAE7C,sBAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;AAEpC,sBAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;qBAEpB,IAAI,EAAE;;;;;;;;KACb;;;;;OAAA;CACF","file":"common.js","sourcesContent":["\"use strict\";\n\nexport function showSchema({collection}) {\n  return async function ({request, response, params}, next) {\n\n    response.body = response.body || {};\n\n    var schema = collection.schema;\n\n    response.body.schema = {\n      name: schema.name,\n      description: schema.description,\n      properties: schema.properties,\n      relations: schema.relations\n    };\n\n    await next();\n  }\n}\n\nexport function showCount({collection}) {\n  return async function ({request, response, params}, next) {\n\n    response.body = response.body || {};\n\n    response.body.count = await collection.count();\n\n    await next();\n  }\n}\n\nexport function showPagesCount({collection}) {\n  return async function ({request, response, params}, next) {\n\n    response.body = response.body || {};\n\n    var count = response.body.count || (await collection.count());\n    var perPage = request.query.perPage || collection.defaults.perPage;\n\n    response.body.pages = Math.ceil(count / perPage);\n\n    await next();\n  }\n}\n\nexport function showUser({collection}) {\n  return async function ({request, response, user}, next) {\n\n    response.body = response.body || {};\n\n    response.body.user = user;\n\n    await next();\n  }\n}\n"]}