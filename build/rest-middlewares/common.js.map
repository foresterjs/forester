{"version":3,"sources":["../../lib/rest-middlewares/common.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;QAEG,UAAU,GAAV,UAAU;QAkBV,SAAS,GAAT,SAAS;QAWT,cAAc,GAAd,cAAc;QAcd,QAAQ,GAAR,QAAQ;;;;AA3CjB,SAAS,UAAU,OAAe;MAAb,UAAU,QAAV,UAAU;;AACpC;gCAAO,kBAA6C,IAAI,EAAE;UAAlC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,MAAM,SAAN,MAAM;;AAE/C,cAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;AAEpC,UAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;;AAE/B,cAAQ,CAAC,IAAI,CAAC,MAAM,GAAG;AACrB,YAAI,EAAE,MAAM,CAAC,IAAI;AACjB,mBAAW,EAAE,MAAM,CAAC,WAAW;AAC/B,kBAAU,EAAE,MAAM,CAAC,UAAU;AAC7B,iBAAS,EAAE,MAAM,CAAC,SAAS;OAC5B,CAAC;;AAEF,YAAM,IAAI,EAAE,CAAC;KACd;;;;;OAAA;CACF;;AAEM,SAAS,SAAS,QAAe;MAAb,UAAU,SAAV,UAAU;;AACnC;gCAAO,kBAA6C,IAAI,EAAE;UAAlC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,MAAM,SAAN,MAAM;;AAE/C,cAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;AAEpC,cAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;;AAE/C,YAAM,IAAI,EAAE,CAAC;KACd;;;;;OAAA;CACF;;AAEM,SAAS,cAAc,QAAe;MAAb,UAAU,SAAV,UAAU;;AACxC;gCAAO,kBAA6C,IAAI,EAAE;UAAlC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,MAAM,SAAN,MAAM;;AAE/C,cAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;AAEpC,UAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,UAAU,CAAC,KAAK,EAAE,CAAA,AAAC,CAAC;AAC9D,UAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;;AAEnE,cAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;;AAEjD,YAAM,IAAI,EAAE,CAAC;KACd;;;;;OAAA;CACF;;AAEM,SAAS,QAAQ,QAAe;MAAb,UAAU,SAAV,UAAU;;AAClC;gCAAO,kBAA2C,IAAI,EAAE;UAAhC,OAAO,SAAP,OAAO;UAAE,QAAQ,SAAR,QAAQ;UAAE,IAAI,SAAJ,IAAI;;AAE7C,cAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;;AAEpC,cAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAE1B,YAAM,IAAI,EAAE,CAAC;KACd;;;;;OAAA;CACF","file":"common.js","sourcesContent":["\"use strict\";\n\nexport function showSchema({collection}) {\n  return async function ({request, response, params}, next) {\n\n    response.body = response.body || {};\n\n    var schema = collection.schema;\n\n    response.body.schema = {\n      name: schema.name,\n      description: schema.description,\n      properties: schema.properties,\n      relations: schema.relations\n    };\n\n    await next();\n  }\n}\n\nexport function showCount({collection}) {\n  return async function ({request, response, params}, next) {\n\n    response.body = response.body || {};\n\n    response.body.count = await collection.count();\n\n    await next();\n  }\n}\n\nexport function showPagesCount({collection}) {\n  return async function ({request, response, params}, next) {\n\n    response.body = response.body || {};\n\n    var count = response.body.count || (await collection.count());\n    var perPage = request.query.perPage || collection.defaults.perPage;\n\n    response.body.pages = Math.ceil(count / perPage);\n\n    await next();\n  }\n}\n\nexport function showUser({collection}) {\n  return async function ({request, response, user}, next) {\n\n    response.body = response.body || {};\n\n    response.body.user = user;\n\n    await next();\n  }\n}\n"]}